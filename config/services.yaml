# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # -
    App\:
        resource: '../src/*'
        exclude: '../src/{Kernel.php,Tests},../src/Base/{Entity,Enums,Exceptions,Messages,Migrations,Repository,Utils}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # -
    App\Interop\Website\Controller\:
        resource: '../src/Interop/Website/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Services\Dummy\External\FooServiceInterface:
        class: App\Services\Dummy\External\FooBService
    App\Process\ProcessEventHandlers\StepHandler:
        public: true
    App\Process\ProcessEventHandlers\PoiHandler:
        public: true
    App\Process\ProcessEventHandlers\AccessHandler:
        public: true
    App\Process\ProcessEventHandlers\CompletionHandler:
        public: true
    App\Process\ProcessEventHandlers\ScenarioHandler:
        public: true

    # events
    App\Process\SystemEventHandlerFactory: ~
    App\Process\SystemEventHandlerInterface:
        factory: 'App\Process\SystemEventHandlerFactory:create'
        arguments: ['@Psr\Container\ContainerInterface']
        tags:
            - { name: kernel.event_listener, event: general.user_message_received, method: handle }
            - { name: kernel.event_listener, event: step.foo, method: handle }
            - { name: kernel.event_listener, event: poi.foo, method: handle }
            - { name: kernel.event_listener, event: access.foo, method: handle }
            - { name: kernel.event_listener, event: completion.foo, method: handle }
            - { name: kernel.event_listener, event: scenario.foo, method: handle }
